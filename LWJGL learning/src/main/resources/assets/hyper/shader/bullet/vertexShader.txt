#version 120

attribute vec3 teh_ultim8_vertices_brah;
attribute vec2 teh_bootiful_textures;

uniform mat4 projection;
uniform float rotation;
uniform float size;

varying vec2 tex_coords;
varying vec2 pos;

void main() {
	tex_coords = teh_bootiful_textures;
	vec3 temp;
	temp.x = teh_ultim8_vertices_brah.x * cos(rotation) + teh_ultim8_vertices_brah.y * sin(rotation);
	temp.y = teh_ultim8_vertices_brah.y * cos(rotation) - teh_ultim8_vertices_brah.x * sin(rotation);
	temp.z = teh_ultim8_vertices_brah.z;
	gl_Position = projection * vec4(temp, 1);
	pos = gl_Position.xy;
}